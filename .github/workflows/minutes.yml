name: Build Minutes Site

on:
  schedule:
    # Run daily at 2 AM UTC to check for new minutes
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual trigger

jobs:
  build-minutes:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout main repo
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Checkout minutes repo
      uses: actions/checkout@v3
      with:
        repository: ccowmu/minutes
        path: minutes-repo
        
    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: 'latest'
        extended: true
        
    - name: Setup Hugo site structure
      run: |
        # Create Hugo site if it doesn't exist
        if [ ! -f "hugo-minutes/config.yaml" ]; then
          hugo new site hugo-minutes
          cd hugo-minutes
          
          # Create basic config
          cat > config.yaml << 'EOF'
        baseURL: '/minutes'
        languageCode: 'en-us'
        title: 'CCaWMU Meeting Minutes'
        theme: 'minutes-theme'
        
        paginate: 20
        paginatePath: 'page'
        
        params:
          clubName: 'Computer Club at WMU'
          description: 'Meeting minutes archive for CCaWMU'
        
        markup:
          goldmark:
            renderer:
              unsafe: true
        EOF
          
          # Create theme directory structure
          mkdir -p themes/minutes-theme/layouts/_default
          mkdir -p themes/minutes-theme/layouts/partials
          mkdir -p themes/minutes-theme/static/css
          
          cd ..
        fi
        
    - name: Create Hugo templates
      run: |
        cd hugo-minutes
        
        # Create base template
        cat > themes/minutes-theme/layouts/_default/baseof.html << 'EOF'
        <!DOCTYPE html>
        <html lang="{{ .Site.LanguageCode }}">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>{{ block "title" . }}{{ .Site.Title }}{{ end }}</title>
            <link rel="stylesheet" href="{{ "css/style.css" | relURL }}">
        </head>
        <body>
            <header class="site-header">
                <div class="container">
                    <h1><a href="{{ .Site.BaseURL }}">{{ .Site.Params.clubName }}</a></h1>
                    <nav>
                        <a href="{{ .Site.BaseURL }}">All Minutes</a>
                        <a href="https://ccawmu.org">Main Site</a>
                    </nav>
                </div>
            </header>
            <main class="main-content">
                {{ block "main" . }}{{ end }}
            </main>
            <footer class="site-footer">
                <div class="container">
                    <p>&copy; {{ now.Year }} {{ .Site.Params.clubName }}</p>
                </div>
            </footer>
        </body>
        </html>
        EOF
        
        # Create list template (for minutes index)
        cat > themes/minutes-theme/layouts/_default/list.html << 'EOF'
        {{ define "title" }}Meeting Minutes - {{ .Site.Title }}{{ end }}
        
        {{ define "main" }}
        <div class="container">
            <header class="page-header">
                <h1>Meeting Minutes</h1>
                <p class="page-description">{{ .Site.Params.description }}</p>
                <div class="stats">
                    <span class="total-count">{{ len .Site.RegularPages }} total meetings</span>
                    <span class="current-page">Page {{ .Paginator.PageNumber }} of {{ .Paginator.TotalPages }}</span>
                </div>
            </header>
            
            <div class="search-box">
                <input type="text" id="search" placeholder="Search minutes by date or content..." />
                <div class="search-results" id="search-results" style="display: none;"></div>
            </div>
            
            <div class="year-filter">
                <label>Filter by year:</label>
                <select id="year-filter">
                    <option value="">All years</option>
                    <!-- Years will be populated by JavaScript -->
                </select>
            </div>
            
            <div class="minutes-grid" id="minutes-list">
                {{ range .Paginator.Pages }}
                <article class="minute-card" data-title="{{ .Title }}" data-date="{{ .Date.Format "2006-01-02" }}" data-year="{{ .Date.Year }}">
                    <header class="minute-header">
                        <h2><a href="{{ .Permalink }}">{{ .Title }}</a></h2>
                        <time datetime="{{ .Date.Format "2006-01-02" }}">{{ .Date.Format "January 2, 2006" }}</time>
                    </header>
                    {{ if .Summary }}
                    <div class="minute-summary">
                        {{ .Summary | truncate 150 }}
                    </div>
                    {{ end }}
                    <footer class="minute-footer">
                        <a href="{{ .Permalink }}" class="read-more">Read Minutes →</a>
                    </footer>
                </article>
                {{ end }}
            </div>
            
            <!-- Pagination -->
            {{ if gt .Paginator.TotalPages 1 }}
            <nav class="pagination">
                {{ if .Paginator.HasPrev }}
                <a href="{{ .Paginator.Prev.URL }}" class="pagination-link prev">← Previous</a>
                {{ end }}
                
                <div class="pagination-numbers">
                    {{ range .Paginator.Pagers }}
                    {{ if eq . $.Paginator }}
                    <span class="pagination-current">{{ .PageNumber }}</span>
                    {{ else }}
                    <a href="{{ .URL }}" class="pagination-link">{{ .PageNumber }}</a>
                    {{ end }}
                    {{ end }}
                </div>
                
                {{ if .Paginator.HasNext }}
                <a href="{{ .Paginator.Next.URL }}" class="pagination-link next">Next →</a>
                {{ end }}
            </nav>
            {{ end }}
        </div>
        
        <!-- JavaScript for search and filtering -->
        <script>
        // Build search index from all pages (lazy loaded)
        let searchIndex = [];
        let allYears = new Set();
        
        // Initialize year filter
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.minute-card');
            cards.forEach(card => {
                allYears.add(card.dataset.year);
            });
            
            const yearFilter = document.getElementById('year-filter');
            Array.from(allYears).sort((a, b) => b - a).forEach(year => {
                const option = document.createElement('option');
                option.value = year;
                option.textContent = year;
                yearFilter.appendChild(option);
            });
        });
        
        // Year filter functionality
        document.getElementById('year-filter').addEventListener('change', function(e) {
            const selectedYear = e.target.value;
            const cards = document.querySelectorAll('.minute-card');
            
            cards.forEach(card => {
                if (!selectedYear || card.dataset.year === selectedYear) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        });
        
        // Search functionality (client-side for current page)
        document.getElementById('search').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const cards = document.querySelectorAll('.minute-card');
            
            if (searchTerm.length < 2) {
                cards.forEach(card => card.style.display = 'block');
                return;
            }
            
            cards.forEach(card => {
                const title = card.dataset.title.toLowerCase();
                const content = card.textContent.toLowerCase();
                
                if (title.includes(searchTerm) || content.includes(searchTerm)) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        });
        </script>
        {{ end }}
        EOF
        
        # Create single template (for individual minutes)
        cat > themes/minutes-theme/layouts/_default/single.html << 'EOF'
        {{ define "title" }}{{ .Title }} - {{ .Site.Title }}{{ end }}
        
        {{ define "main" }}
        <div class="container">
            <article class="minute-article">
                <header class="article-header">
                    <h1>{{ .Title }}</h1>
                    <div class="article-meta">
                        <time datetime="{{ .Date.Format "2006-01-02" }}">{{ .Date.Format "January 2, 2006" }}</time>
                        <a href="{{ .Site.BaseURL }}" class="back-link">← Back to All Minutes</a>
                    </div>
                </header>
                
                <div class="article-content">
                    {{ .Content }}
                </div>
            </article>
        </div>
        {{ end }}
        EOF
        
        # Create CSS
        cat > themes/minutes-theme/static/css/style.css << 'EOF'
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            background: #f8f9fa;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
        }
        
        .site-header {
            background: #2c3e50;
            color: white;
            padding: 1rem 0;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .site-header .container {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .site-header h1 a {
            color: white;
            text-decoration: none;
        }
        
        .site-header nav a {
            color: #ecf0f1;
            text-decoration: none;
            margin-left: 1rem;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            transition: background 0.2s;
        }
        
        .site-header nav a:hover {
            background: rgba(255,255,255,0.1);
        }
        
        .main-content {
            padding: 2rem 0;
            min-height: calc(100vh - 200px);
        }
        
        .page-header {
            text-align: center;
            margin-bottom: 2rem;
        }
        
        .page-header h1 {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
            color: #2c3e50;
        }
        
        .page-description {
            color: #666;
            font-size: 1.1rem;
            margin-bottom: 1rem;
        }
        
        .stats {
            display: flex;
            justify-content: center;
            gap: 2rem;
            color: #666;
            font-size: 0.9rem;
        }
        
        .search-box {
            max-width: 500px;
            margin: 0 auto 1rem;
            position: relative;
        }
        
        .search-box input {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 1rem;
        }
        
        .year-filter {
            max-width: 200px;
            margin: 0 auto 2rem;
            text-align: center;
        }
        
        .year-filter label {
            display: block;
            margin-bottom: 0.5rem;
            color: #666;
        }
        
        .year-filter select {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
        }
        
        .minutes-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }
        
        .minute-card {
            background: white;
            border-radius: 8px;
            padding: 1.5rem;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            transition: transform 0.2s, box-shadow 0.2s;
        }
        
        .minute-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 16px rgba(0,0,0,0.15);
        }
        
        .minute-header h2 a {
            color: #2c3e50;
            text-decoration: none;
            font-size: 1.2rem;
        }
        
        .minute-header time {
            color: #666;
            font-size: 0.9rem;
        }
        
        .minute-summary {
            margin: 1rem 0;
            color: #555;
        }
        
        .read-more {
            color: #3498db;
            text-decoration: none;
            font-weight: 500;
        }
        
        .read-more:hover {
            text-decoration: underline;
        }
        
        /* Pagination Styles */
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 1rem;
            margin: 2rem 0;
            padding: 1rem;
        }
        
        .pagination-numbers {
            display: flex;
            gap: 0.5rem;
        }
        
        .pagination-link {
            padding: 0.5rem 1rem;
            background: white;
            border: 1px solid #ddd;
            border-radius: 4px;
            text-decoration: none;
            color: #3498db;
            transition: all 0.2s;
        }
        
        .pagination-link:hover {
            background: #3498db;
            color: white;
        }
        
        .pagination-current {
            padding: 0.5rem 1rem;
            background: #3498db;
            color: white;
            border-radius: 4px;
            font-weight: bold;
        }
        
        .pagination-link.prev,
        .pagination-link.next {
            font-weight: 500;
        }
        
        .article-header {
            margin-bottom: 2rem;
            text-align: center;
        }
        
        .article-header h1 {
            font-size: 2rem;
            color: #2c3e50;
            margin-bottom: 1rem;
        }
        
        .article-meta {
            color: #666;
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 2rem;
        }
        
        .back-link {
            color: #3498db;
            text-decoration: none;
        }
        
        .back-link:hover {
            text-decoration: underline;
        }
        
        .article-content {
            background: white;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            max-width: 800px;
            margin: 0 auto;
        }
        
        .article-content h1, .article-content h2, .article-content h3 {
            color: #2c3e50;
            margin-top: 1.5rem;
            margin-bottom: 0.5rem;
        }
        
        .article-content p {
            margin-bottom: 1rem;
        }
        
        .article-content ul, .article-content ol {
            margin-left: 2rem;
            margin-bottom: 1rem;
        }
        
        .site-footer {
            background: #34495e;
            color: white;
            text-align: center;
            padding: 1rem 0;
            margin-top: 2rem;
        }
        
        @media (max-width: 768px) {
            .site-header .container {
                flex-direction: column;
                gap: 1rem;
            }
            
            .minutes-grid {
                grid-template-columns: 1fr;
            }
            
            .article-meta {
                flex-direction: column;
                gap: 0.5rem;
            }
            
            .stats {
                flex-direction: column;
                gap: 0.5rem;
            }
            
            .pagination {
                flex-direction: column;
                gap: 1rem;
            }
        }
        EOF
        
    - name: Convert and copy minutes
      run: |
        cd hugo-minutes
        
        # Clear existing content
        rm -rf content/*
        
        # Process each markdown file from the minutes repo
        for file in ../minutes-repo/minutes/*.md; do
          if [ -f "$file" ]; then
            filename=$(basename "$file" .md)
            
            # Extract date from filename (YYYYMMDD format)
            if [[ $filename =~ ^([0-9]{4})([0-9]{2})([0-9]{2})$ ]]; then
              year=${BASH_REMATCH[1]}
              month=${BASH_REMATCH[2]}
              day=${BASH_REMATCH[3]}
              
              # Create content file with frontmatter
              cat > "content/${filename}.md" << EOF
        ---
        title: "Meeting Minutes - ${month}/${day}/${year}"
        date: ${year}-${month}-${day}T18:00:00-05:00
        draft: false
        ---
        
        EOF
              # Append the original content
              cat "$file" >> "content/${filename}.md"
            fi
          fi
        done
        
    - name: Build Hugo site
      run: |
        cd hugo-minutes
        hugo --minify
        
    - name: Deploy to minutes folder
      run: |
        # Remove existing minutes folder and replace with new build
        rm -rf minutes
        mv hugo-minutes/public minutes
        
        # Create a simple redirect index file for the minutes folder
        cat > minutes/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <title>CCaWMU Meeting Minutes</title>
            <style>
                body { font-family: -apple-system, BlinkMacSystemFont, sans-serif; text-align: center; padding: 2rem; }
                .container { max-width: 600px; margin: 0 auto; }
                h1 { color: #2c3e50; }
                .button { display: inline-block; padding: 1rem 2rem; background: #3498db; color: white; text-decoration: none; border-radius: 8px; margin: 1rem; }
                .button:hover { background: #2980b9; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>CCaWMU Meeting Minutes</h1>
                <p>Access our meeting minutes archive</p>
                <a href="index.html" class="button">View All Minutes</a>
                <a href="../index.html" class="button">Back to Main Site</a>
            </div>
        </body>
        </html>
        EOF
        
    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add minutes/
        git add hugo-minutes/
        
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update minutes site [skip ci]"
          git push
        fi
